name: Web Site Generation using the Beautiful Jekyll Theme

on:
  # Only build and deploy the main branch
  push:
    branches: [ foo ]
  pull_request:
    branches: [ foo ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  WEBSITES: "webone webtwo webcommon"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and the latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    strategy:
      matrix:
        site: [webone, webtwo]
    name: Build Jekyll
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the site in the jekyll/builder container
        run: |
          cp -rpv ${{ github.workspace }}/_common/* ${{ matrix.site }}
          export JEKYLL_VERSION=stable
          docker run \
          -v ${{ github.workspace }}/${{ matrix.site }}:/srv/jekyll -v ${{ github.workspace }}/_site/${{ matrix.site }}:/srv/jekyll/_site \
          -e PAGES_REPO_NWO=${{ github.repository }} \
          jekyll/builder:$JEKYLL_VERSION /bin/bash -c "chmod 777 /srv/jekyll && jekyll build --future --trace --verbose"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name:  ${{ matrix.site }}

  # Copy remaining files that are not being generated by Jekyll to the _site directory so that they can be deployed
  copy:
    environment:
      name: github-pages
    name: Copy Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Copy Required Web Site Files
        run: |
          mkdir _site
          cp -vp index.htm _site
      # Upload the generated and copied artifacts
      - name: Upload Static Web Pages Artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
        with: 
          name: webcommon 

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [ copy, build ]
    name: Deploy Site Web Pages
    runs-on: ubuntu-latest
    steps:
      # Download All Generated Artifacts
      # NOTE: we are not able to use the merge-multiple feature since the achives that were
      # uploaded by the update-pages-artifact generates the same archive name for each
      # one so the download-artifact will override the archive and only the last one
      # downloaded will survive.
      - name: Download All Artifacts
        id: artifact
        uses: actions/download-artifact@v4
        with:
          pattern: web*
      - name: Populate the _site directory
        run: |
          echo artifact=${{ steps.artifact.download-path }}
          mkdir _site
          cd _site
          for site in $WEBSITES
          do
            tar xvf ../${site}/artifact.tar
          done
      # Upload Combined Artifact
      - name: Upload Combined Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: combined
      # Deployment job
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: combined

